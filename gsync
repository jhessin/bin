#!/usr/bin/env zsh

# First check for non-default branch
branch=$(git branch --show-current)

# echo "starting branch = $branch"

# split the branch into different parts (zsh)
sep=/
branch_array=("${(ps.$sep.)branch}")

# split the branch into different parts (bash)
# old_ifs=$IFS
# IFS='/'
# read -ra branch_array <<< $branch

# remove the origin/ part of the branch name
if [[ "${branch_array[0]}" = *"origin"* ]]; then
  branch=${branch_array[1]}
fi

# echo "ending branch = $branch"

source functions.sh

#new workflow

# get updates from upstream
git fetch

# check for upstream changes
if [[ $(git diff HEAD origin/$branch --stat) != '' ]]; then
  downstream=true
else
  echo "There are no upstream changes"
fi

# check differences with working tree
if [[ -n $(git status -s) ]]; then
  upstream=true
else
  echo "Tree is clean"
fi

if [ "$upstream" = true ] && [ "$downstream" = true ]; then
  echo need to merge different things
  git diff
  # prompt for continue, or cancel
  if confirm "Would you like to commit this" ; then
    echo commiting changes
    git add -A
    git commit -a
  else
    # prompt for a reset and clean
    confirm "Would you like to revert changes"
    if echo "$answer" | grep -iq "^y" ; then
      echo Cleaning and pulling changes
      clean
      git pull
      git push # Just in case
      exit 0
    else
      echo Canceling sync
      exit 0
    fi
  fi

  # compare with upstream
  git diff HEAD origin/$branch
  if confirm "Would you like to merge this" ; then
    echo MERGING CHANGES
    git merge origin/$branch
  fi
  echo "PUSHING CHANGES UPSTREAM"
  git push
elif [ "$upstream" = true ]; then
  echo Tree is dirty
  git diff

  # prompt for continue, or cancel
  if confirm "Would you like to commit this" ; then
    echo commiting and pushing changes
    git add -A
    git commit -a
    git push
  else
    # prompt for a reset and clean
    confirm "Would you like to revert changes"
    if echo "$answer" | grep -iq "^y" ; then
      echo Cleaning and canceling sync
      clean
      exit 0
    else
      echo Canceling sync
    fi
  fi
  echo "PUSHING CHANGES UPSTREAM"
  git push
elif [ "$downstream" = true ]; then
  echo There are upstream changes that need to be pulled downstream
  git pull
  git push # Just in case
fi
IFS=old_ifs
